
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pod-security.kubernetes.io/enforce: restricted
  name: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pod-security.kubernetes.io/enforce: restricted
  name: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-resolvers
  namespace: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: events
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-events-controller
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.52.0
  name: webhook-certs
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  default-kind: task
  default-service-account: default
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: bundleresolver-config
  namespace: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  allowed-namespaces: ""
  blocked-namespaces: ""
  default-kind: task
  default-namespace: ""
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: cluster-resolver-config
  namespace: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    # lease-duration is how long non-leaders will wait to try to acquire the
    # lock; 15 seconds is the value used by core kubernetes controllers.
    lease-duration: "60s"
    # renew-deadline is how long a leader will try to renew the lease before
    # giving up; 10 seconds is the value used by core kubernetes controllers.
    renew-deadline: "40s"
    # retry-period is how long the leader election client waits between tries of
    # actions; 2 seconds is the value used by core kubernetes controllers.
    retry-period: "10s"
    # buckets is the number of buckets used to partition key space of each
    # Reconciler. If this number is M and the replica number of the controller
    # is N, the N replicas will compete for the M buckets. The owner of a
    # bucket will take care of the reconciling for the keys partitioned into
    # that bucket.
    buckets: "1"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-leader-election
  namespace: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "timestamp",
        "levelKey": "severity",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "message",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-logging
  namespace: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using stackdriver will incur additional charges
    metrics.backend-destination: prometheus

    # metrics.request-metrics-backend-destination specifies the request metrics
    # destination. If non-empty, it enables queue proxy to send request metrics.
    # Currently supported values: prometheus, stackdriver.
    metrics.request-metrics-backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used if this field is not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to
    # Stackdriver using "global" resource type and custom metric type if the
    # metrics are not supported by "knative_revision" resource type. Setting this
    # flag to "true" could cause extra Stackdriver charge.
    # If metrics.backend-destination is not Stackdriver, this is ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-observability
  namespace: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  api-token-secret-key: ""
  api-token-secret-name: ""
  api-token-secret-namespace: default
  default-org: ""
  default-revision: main
  default-url: https://github.com/tektoncd/catalog.git
  fetch-timeout: 1m
  scm-type: github
  server-url: ""
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: git-resolver-config
  namespace: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  default-artifact-hub-pipeline-catalog: tekton-catalog-pipelines
  default-artifact-hub-task-catalog: tekton-catalog-tasks
  default-kind: task
  default-tekton-hub-catalog: Tekton
  default-type: artifact
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: hubresolver-config
  namespace: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  enable-bundles-resolver: "true"
  enable-cluster-resolver: "true"
  enable-git-resolver: "true"
  enable-hub-resolver: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: resolvers-feature-flags
  namespace: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # default-timeout-minutes contains the default number of
    # minutes to use for TaskRun and PipelineRun, if none is specified.
    default-timeout-minutes: "60"  # 60 minutes

    # default-service-account contains the default service account name
    # to use for TaskRun and PipelineRun, if none is specified.
    default-service-account: "default"

    # default-managed-by-label-value contains the default value given to the
    # "app.kubernetes.io/managed-by" label applied to all Pods created for
    # TaskRuns. If a user's requested TaskRun specifies another value for this
    # label, the user's request supercedes.
    default-managed-by-label-value: "tekton-pipelines"

    # default-pod-template contains the default pod template to use for
    # TaskRun and PipelineRun. If a pod template is specified on the
    # PipelineRun, the default-pod-template is merged with that one.
    # default-pod-template:

    # default-affinity-assistant-pod-template contains the default pod template
    # to use for affinity assistant pods. If a pod template is specified on the
    # PipelineRun, the default-affinity-assistant-pod-template is merged with
    # that one.
    # default-affinity-assistant-pod-template:

    # default-cloud-events-sink contains the default CloudEvents sink to be
    # used for TaskRun and PipelineRun, when no sink is specified.
    # Note that right now it is still not possible to set a PipelineRun or
    # TaskRun specific sink, so the default is the only option available.
    # If no sink is specified, no CloudEvent is generated
    # default-cloud-events-sink:

    # default-task-run-workspace-binding contains the default workspace
    # configuration provided for any Workspaces that a Task declares
    # but that a TaskRun does not explicitly provide.
    # default-task-run-workspace-binding: |
    #   emptyDir: {}

    # default-max-matrix-combinations-count contains the default maximum number
    # of combinations from a Matrix, if none is specified.
    default-max-matrix-combinations-count: "256"

    # default-forbidden-env contains comma seperated environment variables that cannot be
    # overridden by podTemplate.
    default-forbidden-env:

    # default-resolver-type contains the default resolver type to be used in the cluster,
    # no default-resolver-type is specified by default
    default-resolver-type:
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-defaults
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # formats contains a comma seperated list of event formats to be used
    # the only format supported today is "tektonv1". An empty string is not
    # a valid configuration. To disable events, do not specify the sink.
    formats: "tektonv1"

    # sink contains the event sink to be used for TaskRun, PipelineRun and
    # CustomRun. If no sink is specified, no CloudEvent is generated.
    # This setting supercedes the "default-cloud-events-sink" from the
    # "config-defaults" config map
    sink: "https://events.sink/cdevents"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-events
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    # lease-duration is how long non-leaders will wait to try to acquire the
    # lock; 15 seconds is the value used by core kubernetes controllers.
    lease-duration: "60s"
    # renew-deadline is how long a leader will try to renew the lease before
    # giving up; 10 seconds is the value used by core kubernetes controllers.
    renew-deadline: "40s"
    # retry-period is how long the leader election client waits between tries of
    # actions; 2 seconds is the value used by core kubernetes controllers.
    retry-period: "10s"
    # buckets is the number of buckets used to partition key space of each
    # Reconciler. If this number is M and the replica number of the controller
    # is N, the N replicas will compete for the M buckets. The owner of a
    # bucket will take care of the reconciling for the keys partitioned into
    # that bucket.
    buckets: "1"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-leader-election
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "timestamp",
        "levelKey": "severity",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "message",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-logging
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using Stackdriver will incur additional charges.
    metrics.backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the Stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used and metrics will be sent to the cluster's project if this field is
    # not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed
    # to send metrics to Stackdriver using "global" resource type and custom
    # metric type. Setting this flag to "true" could cause extra Stackdriver
    # charge.  If metrics.backend-destination is not Stackdriver, this is
    # ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
    metrics.taskrun.level: "task"
    metrics.taskrun.duration-type: "histogram"
    metrics.pipelinerun.level: "pipeline"
    metrics.pipelinerun.duration-type: "histogram"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-observability
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-registry-cert
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    #
    # spire-trust-domain specifies the SPIRE trust domain to use.
    # spire-trust-domain: "example.org"
    #
    # spire-socket-path specifies the SPIRE agent socket for SPIFFE workload API.
    # spire-socket-path: "unix:///spiffe-workload-api/spire-agent.sock"
    #
    # spire-server-addr specifies the SPIRE server address for workload/node registration.
    # spire-server-addr: "spire-server.spire.svc.cluster.local:8081"
    #
    # spire-node-alias-prefix specifies the SPIRE node alias prefix to use.
    # spire-node-alias-prefix: "/tekton-node/"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-spire
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    #
    # Enable sending traces to defined endpoint by setting this to true
    enabled: "true"
    #
    # API endpoint to send the traces to
    # (optional): The default value is given below
    endpoint: "http://jaeger-collector.jaeger.svc.cluster.local:14268/api/traces"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-tracing
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  await-sidecar-readiness: "true"
  coschedule: workspaces
  disable-affinity-assistant: "false"
  disable-creds-init: "false"
  enable-api-fields: beta
  enable-provenance-in-status: "true"
  enable-tekton-oci-bundles: "false"
  enforce-nonfalsifiability: none
  require-git-ssh-secret-known-hosts: "false"
  results-from: termination-message
  running-in-environment-with-injected-sidecars: "true"
  send-cloudevents-for-runs: "false"
  set-security-context: "false"
  trusted-resources-verification-no-match-policy: ignore
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: feature-flags
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
data:
  version: v0.52.0
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: pipelines-info
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: clustertasks.tekton.dev
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: tekton-pipelines-webhook
          namespace: tekton-pipelines
      conversionReviewVersions:
      - v1beta1
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: ClusterTask
    plural: clustertasks
    singular: clustertask
  preserveUnknownFields: false
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: customruns.tekton.dev
spec:
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: CustomRun
    plural: customruns
    singular: customrun
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
      name: Succeeded
      type: string
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
      name: Reason
      type: string
    - jsonPath: .status.startTime
      name: StartTime
      type: date
    - jsonPath: .status.completionTime
      name: CompletionTime
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: pipelineruns.tekton.dev
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: tekton-pipelines-webhook
          namespace: tekton-pipelines
      conversionReviewVersions:
      - v1beta1
      - v1
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: PipelineRun
    plural: pipelineruns
    shortNames:
    - pr
    - prs
    singular: pipelinerun
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
      name: Succeeded
      type: string
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
      name: Reason
      type: string
    - jsonPath: .status.startTime
      name: StartTime
      type: date
    - jsonPath: .status.completionTime
      name: CompletionTime
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
      name: Succeeded
      type: string
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
      name: Reason
      type: string
    - jsonPath: .status.startTime
      name: StartTime
      type: date
    - jsonPath: .status.completionTime
      name: CompletionTime
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: pipelines.tekton.dev
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: tekton-pipelines-webhook
          namespace: tekton-pipelines
      conversionReviewVersions:
      - v1beta1
      - v1
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: Pipeline
    plural: pipelines
    singular: pipeline
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    resolution.tekton.dev/release: devel
  name: resolutionrequests.resolution.tekton.dev
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: tekton-pipelines-webhook
          namespace: tekton-pipelines
      conversionReviewVersions:
      - v1alpha1
      - v1beta1
  group: resolution.tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: ResolutionRequest
    plural: resolutionrequests
    shortNames:
    - resolutionrequest
    - resolutionrequests
    singular: resolutionrequest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Succeeded')].status
      name: Succeeded
      type: string
    - jsonPath: .status.conditions[?(@.type=='Succeeded')].reason
      name: Reason
      type: string
    deprecated: true
    name: v1alpha1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .metadata.ownerReferences[0].kind
      name: OwnerKind
      type: string
    - jsonPath: .metadata.ownerReferences[0].name
      name: Owner
      type: string
    - jsonPath: .status.conditions[?(@.type=='Succeeded')].status
      name: Succeeded
      type: string
    - jsonPath: .status.conditions[?(@.type=='Succeeded')].reason
      name: Reason
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: StartTime
      type: string
    - jsonPath: .status.conditions[?(@.type=='Succeeded')].lastTransitionTime
      name: EndTime
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: taskruns.tekton.dev
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: tekton-pipelines-webhook
          namespace: tekton-pipelines
      conversionReviewVersions:
      - v1beta1
      - v1
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: TaskRun
    plural: taskruns
    shortNames:
    - tr
    - trs
    singular: taskrun
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
      name: Succeeded
      type: string
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
      name: Reason
      type: string
    - jsonPath: .status.startTime
      name: StartTime
      type: date
    - jsonPath: .status.completionTime
      name: CompletionTime
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
      name: Succeeded
      type: string
    - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
      name: Reason
      type: string
    - jsonPath: .status.startTime
      name: StartTime
      type: date
    - jsonPath: .status.completionTime
      name: CompletionTime
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: tasks.tekton.dev
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: tekton-pipelines-webhook
          namespace: tekton-pipelines
      conversionReviewVersions:
      - v1beta1
      - v1
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: Task
    plural: tasks
    singular: task
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: verificationpolicies.tekton.dev
spec:
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: VerificationPolicy
    plural: verificationpolicies
    singular: verificationpolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: tekton-aggregate-edit
rules:
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - pipelines
  - pipelineruns
  - runs
  - customruns
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: tekton-aggregate-view
rules:
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - pipelines
  - pipelineruns
  - runs
  - customruns
  verbs:
  - get
  - list
  - watch
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: events
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-events-controller-cluster-access
rules:
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - clustertasks
  - taskruns
  - pipelines
  - pipelineruns
  - customruns
  verbs:
  - get
  - list
  - watch
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller-cluster-access
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - clustertasks
  - taskruns
  - pipelines
  - pipelineruns
  - customruns
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - verificationpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - taskruns/finalizers
  - pipelineruns/finalizers
  - customruns/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks/status
  - clustertasks/status
  - taskruns/status
  - pipelines/status
  - pipelineruns/status
  - customruns/status
  - verificationpolicies/status
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - resolution.tekton.dev
  resources:
  - resolutionrequests
  - resolutionrequests/status
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller-tenant-access
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - limitranges
  - secrets
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-resolvers-resolution-request-updates
rules:
- apiGroups:
  - resolution.tekton.dev
  resources:
  - resolutionrequests
  - resolutionrequests/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - pipelines
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-webhook-cluster-access
rules:
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - pipelines.tekton.dev
  - pipelineruns.tekton.dev
  - tasks.tekton.dev
  - clustertasks.tekton.dev
  - taskruns.tekton.dev
  - resolutionrequests.resolution.tekton.dev
  - customruns.tekton.dev
  - verificationpolicies.tekton.dev
  resources:
  - customresourcedefinitions
  - customresourcedefinitions/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - webhook.pipeline.tekton.dev
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - update
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - validation.webhook.pipeline.tekton.dev
  - config.webhook.pipeline.tekton.dev
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update
  - delete
- apiGroups:
  - ""
  resourceNames:
  - tekton-pipelines
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resourceNames:
  - tekton-pipelines
  resources:
  - namespaces/finalizers
  verbs:
  - update
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: events
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-events-controller-cluster-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-events-controller-cluster-access
subjects:
- kind: ServiceAccount
  name: tekton-events-controller
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller-cluster-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-pipelines-controller-cluster-access
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller-tenant-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-pipelines-controller-tenant-access
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-resolvers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-pipelines-resolvers-resolution-request-updates
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-resolvers
  namespace: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-webhook-cluster-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-pipelines-webhook-cluster-access
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-resolvers-namespace-rbac
  namespace: tekton-pipelines-resolvers
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - config-logging
  - config-observability
  - feature-flags
  - config-leader-election
  - config-registry-cert
  resources:
  - configmaps
  verbs:
  - get
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: events
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-events-controller
  namespace: tekton-pipelines
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - config-logging
  - config-observability
  - feature-flags
  - config-leader-election
  - config-registry-cert
  resources:
  - configmaps
  verbs:
  - get
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-info
  namespace: tekton-pipelines
rules:
- apiGroups:
  - ""
  resourceNames:
  - pipelines-info
  resources:
  - configmaps
  verbs:
  - get
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-leader-election
  namespace: tekton-pipelines
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - config-logging
  - config-observability
  - config-leader-election
  - feature-flags
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - webhook-certs
  resources:
  - secrets
  verbs:
  - get
  - update
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-resolvers-namespace-rbac
  namespace: tekton-pipelines-resolvers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-pipelines-resolvers-namespace-rbac
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-resolvers
  namespace: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: events
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-events-controller-leaderelection
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-pipelines-leader-election
subjects:
- kind: ServiceAccount
  name: tekton-events-controller
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-pipelines-controller
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller-leaderelection
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-pipelines-leader-election
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: events
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-events-controller
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-pipelines-events-controller
subjects:
- kind: ServiceAccount
  name: tekton-events-controller
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-info
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-pipelines-info
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-pipelines-webhook
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-webhook-leaderelection
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-pipelines-leader-election
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-pipelines-remote-resolvers
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: resolvers
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.52.0
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: tekton-pipelines-remote-resolvers
  namespace: tekton-pipelines-resolvers
spec:
  ports:
  - name: http-metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: probes
    port: 8080
  selector:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: resolvers
    app.kubernetes.io/part-of: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-events-controller
    app.kubernetes.io/component: events
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: events
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.52.0
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: tekton-events-controller
  namespace: tekton-pipelines
spec:
  ports:
  - name: http-metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: probes
    port: 8080
  selector:
    app.kubernetes.io/component: events
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: events
    app.kubernetes.io/part-of: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-pipelines-controller
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.52.0
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
spec:
  ports:
  - name: http-metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: probes
    port: 8080
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-pipelines-webhook
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.52.0
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
spec:
  ports:
  - name: http-metrics
    port: 9090
    targetPort: metrics
  - name: http-profiling
    port: 8008
    targetPort: profiling
  - name: https-webhook
    port: 443
    targetPort: https-webhook
  - name: probes
    port: 8080
    targetPort: probes
  selector:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-pipelines
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: resolvers
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.52.0
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: tekton-pipelines-remote-resolvers
  namespace: tekton-pipelines-resolvers
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: resolvers
      app.kubernetes.io/instance: tekton-pipelines
      app.kubernetes.io/name: resolvers
      app.kubernetes.io/part-of: tekton-pipelines
  template:
    metadata:
      labels:
        app: tekton-pipelines-resolvers
        app.kubernetes.io/component: resolvers
        app.kubernetes.io/instance: tekton-pipelines
        app.kubernetes.io/name: resolvers
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: v0.52.0
        pipeline.tekton.dev/release: v0.52.0
        version: v0.52.0
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: resolvers
                  app.kubernetes.io/instance: tekton-pipelines
                  app.kubernetes.io/name: resolvers
                  app.kubernetes.io/part-of: tekton-pipelines
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_FEATURE_FLAGS_NAME
          value: feature-flags
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election
        - name: METRICS_DOMAIN
          value: tekton.dev/resolution
        - name: PROBES_PORT
          value: "8080"
        - name: ARTIFACT_HUB_API
          value: https://artifacthub.io/
        image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/resolvers:v0.52.0@sha256:c7376f409a6471920a1e807d5adbc8d170cf2ad29835a9f0470dc790b46c926c
        name: controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8080
          name: probes
        resources:
          limits:
            cpu: 1000m
            memory: 4Gi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      serviceAccountName: tekton-pipelines-resolvers
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: events
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: events
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.52.0
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: tekton-events-controller
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: events
      app.kubernetes.io/instance: tekton-pipelines
      app.kubernetes.io/name: events
      app.kubernetes.io/part-of: tekton-pipelines
  template:
    metadata:
      labels:
        app: tekton-events-controller
        app.kubernetes.io/component: events
        app.kubernetes.io/instance: tekton-pipelines
        app.kubernetes.io/name: events
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: v0.52.0
        pipeline.tekton.dev/release: v0.52.0
        version: v0.52.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: NotIn
                values:
                - windows
      containers:
      - args: []
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_DEFAULTS_NAME
          value: config-defaults
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election
        - name: SSL_CERT_FILE
          value: /etc/config-registry-cert/cert
        - name: SSL_CERT_DIR
          value: /etc/ssl/certs
        image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/events:v0.52.0@sha256:c1285a31a86fe97be4628af69852a9d45c1a24de9cb08b6f6ededa3a55b7a38f
        livenessProbe:
          httpGet:
            path: /health
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: tekton-events-controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8080
          name: probes
        readinessProbe:
          httpGet:
            path: /readiness
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
        - mountPath: /etc/config-registry-cert
          name: config-registry-cert
      serviceAccountName: tekton-events-controller
      volumes:
      - configMap:
          name: config-logging
        name: config-logging
      - configMap:
          name: config-registry-cert
        name: config-registry-cert
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.52.0
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: tekton-pipelines
      app.kubernetes.io/name: controller
      app.kubernetes.io/part-of: tekton-pipelines
  template:
    metadata:
      labels:
        app: tekton-pipelines-controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: tekton-pipelines
        app.kubernetes.io/name: controller
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: v0.52.0
        pipeline.tekton.dev/release: v0.52.0
        version: v0.52.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: NotIn
                values:
                - windows
      containers:
      - args:
        - -entrypoint-image
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/entrypoint:v0.52.0@sha256:1dd5054725a96f39cbab59631b2dfa9807cbff746d465ae8225766cefa8c46ee
        - -nop-image
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/nop:v0.52.0@sha256:97890c99daec96f74191a29030c19a48c76446e201df44c103fca82096ea17e9
        - -sidecarlogresults-image
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/sidecarlogresults:v0.52.0@sha256:e9a9ba4cf560ccef16f2e165a6968d7d211e062ebe09174f70e689bb4078354e
        - -workingdirinit-image
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/workingdirinit:v0.52.0@sha256:5d5d29b033f6e4430d63a61c12cc14ccbe5ef3654c0dcd8cd8f802a61f5b20e8
        - -shell-image
        - cgr.dev/chainguard/busybox@sha256:19f02276bf8dbdd62f069b922f10c65262cc34b710eea26ff928129a736be791
        - -shell-image-win
        - mcr.microsoft.com/powershell:nanoserver@sha256:b6d5ff841b78bdf2dfed7550000fd4f3437385b8fa686ec0f010be24777654d6
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_DEFAULTS_NAME
          value: config-defaults
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_FEATURE_FLAGS_NAME
          value: feature-flags
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election
        - name: CONFIG_SPIRE
          value: config-spire
        - name: SSL_CERT_FILE
          value: /etc/config-registry-cert/cert
        - name: SSL_CERT_DIR
          value: /etc/ssl/certs
        - name: METRICS_DOMAIN
          value: tekton.dev/pipeline
        image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller:v0.52.0@sha256:207e5112fcbcc3d32ede8e938f3ee9de5820c8a7932d2ef4f46670e2077e0154
        livenessProbe:
          httpGet:
            path: /health
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: tekton-pipelines-controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8080
          name: probes
        readinessProbe:
          httpGet:
            path: /readiness
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
        - mountPath: /etc/config-registry-cert
          name: config-registry-cert
      serviceAccountName: tekton-pipelines-controller
      volumes:
      - configMap:
          name: config-logging
        name: config-logging
      - configMap:
          name: config-registry-cert
        name: config-registry-cert
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.52.0
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: tekton-pipelines
      app.kubernetes.io/name: webhook
      app.kubernetes.io/part-of: tekton-pipelines
  template:
    metadata:
      labels:
        app: tekton-pipelines-webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: tekton-pipelines
        app.kubernetes.io/name: webhook
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: v0.52.0
        pipeline.tekton.dev/release: v0.52.0
        version: v0.52.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: NotIn
                values:
                - windows
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: webhook
                  app.kubernetes.io/instance: tekton-pipelines
                  app.kubernetes.io/name: webhook
                  app.kubernetes.io/part-of: tekton-pipelines
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election
        - name: CONFIG_FEATURE_FLAGS_NAME
          value: feature-flags
        - name: PROBES_PORT
          value: "8080"
        - name: WEBHOOK_PORT
          value: "8443"
        - name: WEBHOOK_ADMISSION_CONTROLLER_NAME
          value: webhook.pipeline.tekton.dev
        - name: WEBHOOK_SERVICE_NAME
          value: tekton-pipelines-webhook
        - name: WEBHOOK_SECRET_NAME
          value: webhook-certs
        - name: METRICS_DOMAIN
          value: tekton.dev/pipeline
        image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/webhook:v0.52.0@sha256:09039d2776090a4baf6a60952a5f2429dc16908d24d4709e3d8ad59eba3b12d9
        livenessProbe:
          httpGet:
            path: /health
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: webhook
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8443
          name: https-webhook
        - containerPort: 8080
          name: probes
        readinessProbe:
          httpGet:
            path: /readiness
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      serviceAccountName: tekton-pipelines-webhook
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.52.0
    pipeline.tekton.dev/release: v0.52.0
    version: v0.52.0
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 100
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tekton-pipelines-webhook
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.52.0
  name: webhook.pipeline.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: tekton-pipelines-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: webhook.pipeline.tekton.dev
  sideEffects: None
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.52.0
  name: config.webhook.pipeline.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: tekton-pipelines-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: config.webhook.pipeline.tekton.dev
  objectSelector:
    matchLabels:
      app.kubernetes.io/part-of: tekton-pipelines
  sideEffects: None
---
# Source: kustomization/templates/kustomized.yaml
# Source: kustomization/templates/kustomized.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: tekton-pipelines
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.52.0
  name: validation.webhook.pipeline.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: tekton-pipelines-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: validation.webhook.pipeline.tekton.dev
  sideEffects: None

