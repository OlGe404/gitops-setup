---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-controller
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-core-interceptors
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-webhook
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: interceptors
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: core-interceptors
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.24.0
  name: tekton-triggers-core-interceptors-certs
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.24.0
  name: triggers-webhook-certs
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # default-service-account contains the default service account name
    # to use for TaskRun and PipelineRun, if none is specified.
    default-service-account: "default"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: config-defaults-triggers
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.eventlistener: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "disableStacktrace": true,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "timestamp",
        "levelKey": "severity",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "message",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: config-logging-triggers
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using stackdriver will incur additional charges
    metrics.backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used if this field is not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to
    # Stackdriver using "global" resource type and custom metric type if the
    # metrics are not supported by "knative_revision" resource type. Setting this
    # flag to "true" could cause extra Stackdriver charge.
    # If metrics.backend-destination is not Stackdriver, this is ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: config-observability-triggers
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
data:
  enable-api-fields: stable
  labels-exclusion-pattern: ""
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: feature-flags-triggers
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
data:
  version: v0.24.0
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: triggers-info
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.24.0
    version: v0.24.0
  name: clusterinterceptors.triggers.tekton.dev
spec:
  group: triggers.tekton.dev
  names:
    categories:
    - tekton
    - tekton-triggers
    kind: ClusterInterceptor
    plural: clusterinterceptors
    shortNames:
    - ci
    singular: clusterinterceptor
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.24.0
    version: v0.24.0
  name: clustertriggerbindings.triggers.tekton.dev
spec:
  group: triggers.tekton.dev
  names:
    categories:
    - tekton
    - tekton-triggers
    kind: ClusterTriggerBinding
    plural: clustertriggerbindings
    shortNames:
    - ctb
    singular: clustertriggerbinding
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: false
    subresources:
      status: {}
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.24.0
    version: v0.24.0
  name: eventlisteners.triggers.tekton.dev
spec:
  group: triggers.tekton.dev
  names:
    categories:
    - tekton
    - tekton-triggers
    kind: EventListener
    plural: eventlisteners
    shortNames:
    - el
    singular: eventlistener
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.address.url
      name: Address
      type: string
    - jsonPath: .status.conditions[?(@.type=='Available')].status
      name: Available
      type: string
    - jsonPath: .status.conditions[?(@.type=='Available')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.address.url
      name: Address
      type: string
    - jsonPath: .status.conditions[?(@.type=='Available')].status
      name: Available
      type: string
    - jsonPath: .status.conditions[?(@.type=='Available')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: false
    subresources:
      status: {}
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.24.0
    version: v0.24.0
  name: interceptors.triggers.tekton.dev
spec:
  group: triggers.tekton.dev
  names:
    categories:
    - tekton
    - tekton-triggers
    kind: Interceptor
    plural: interceptors
    shortNames:
    - ni
    singular: interceptor
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.24.0
    version: v0.24.0
  name: triggerbindings.triggers.tekton.dev
spec:
  group: triggers.tekton.dev
  names:
    categories:
    - tekton
    - tekton-triggers
    kind: TriggerBinding
    plural: triggerbindings
    shortNames:
    - tb
    singular: triggerbinding
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: false
    subresources:
      status: {}
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.24.0
    version: v0.24.0
  name: triggers.triggers.tekton.dev
spec:
  group: triggers.tekton.dev
  names:
    categories:
    - tekton
    - tekton-triggers
    kind: Trigger
    plural: triggers
    shortNames:
    - tri
    singular: trigger
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: false
    subresources:
      status: {}
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.24.0
    version: v0.24.0
  name: triggertemplates.triggers.tekton.dev
spec:
  group: triggers.tekton.dev
  names:
    categories:
    - tekton
    - tekton-triggers
    kind: TriggerTemplate
    plural: triggertemplates
    shortNames:
    - tt
    singular: triggertemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: false
    subresources:
      status: {}
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-admin
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  - events
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - deployments/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - triggers.tekton.dev
  resources:
  - clustertriggerbindings
  - clusterinterceptors
  - interceptors
  - eventlisteners
  - triggerbindings
  - triggertemplates
  - triggers
  - eventlisteners/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - triggers.tekton.dev
  resources:
  - clustertriggerbindings/status
  - clusterinterceptors/status
  - interceptors/status
  - eventlisteners/status
  - triggerbindings/status
  - triggertemplates/status
  - triggers/status
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - serving.knative.dev
  resources:
  - '*'
  - '*/status'
  - '*/finalizers'
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - deletecollection
  - patch
  - watch
- apiGroups:
  - ""
  resourceNames:
  - tekton-pipelines
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resourceNames:
  - tekton-pipelines
  resources:
  - namespaces/finalizers
  verbs:
  - update
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: tekton-triggers-aggregate-edit
rules:
- apiGroups:
  - triggers.tekton.dev
  resources:
  - clustertriggerbindings
  - clusterinterceptors
  - eventlisteners
  - interceptors
  - triggers
  - triggerbindings
  - triggertemplates
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: tekton-triggers-aggregate-view
rules:
- apiGroups:
  - triggers.tekton.dev
  resources:
  - clustertriggerbindings
  - clusterinterceptors
  - eventlisteners
  - interceptors
  - triggers
  - triggerbindings
  - triggertemplates
  verbs:
  - get
  - list
  - watch
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-core-interceptors
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-core-interceptors-secrets
rules:
- apiGroups:
  - triggers.tekton.dev
  resources:
  - clusterinterceptors
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resourceNames:
  - tekton-triggers-core-interceptors-certs
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - update
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-eventlistener-clusterroles
rules:
- apiGroups:
  - triggers.tekton.dev
  resources:
  - clustertriggerbindings
  - clusterinterceptors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-eventlistener-roles
rules:
- apiGroups:
  - triggers.tekton.dev
  resources:
  - eventlisteners
  - triggerbindings
  - interceptors
  - triggertemplates
  - triggers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  - pipelineresources
  - taskruns
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - impersonate
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-controller-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-admin
subjects:
- kind: ServiceAccount
  name: tekton-triggers-controller
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-core-interceptors
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-core-interceptors
subjects:
- kind: ServiceAccount
  name: tekton-triggers-core-interceptors
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-core-interceptors-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-core-interceptors-secrets
subjects:
- kind: ServiceAccount
  name: tekton-triggers-core-interceptors
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-webhook-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-admin
subjects:
- kind: ServiceAccount
  name: tekton-triggers-webhook
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-admin-webhook
  namespace: tekton-pipelines
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-core-interceptors
  namespace: tekton-pipelines
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-info
  namespace: tekton-pipelines
rules:
- apiGroups:
  - ""
  resourceNames:
  - triggers-info
  resources:
  - configmaps
  verbs:
  - get
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-core-interceptors
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-triggers-core-interceptors
subjects:
- kind: ServiceAccount
  name: tekton-triggers-core-interceptors
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-info
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-triggers-info
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-webhook-admin
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-triggers-admin-webhook
subjects:
- kind: ServiceAccount
  name: tekton-triggers-webhook
  namespace: tekton-pipelines
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-triggers-controller
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/version: v0.24.0
    triggers.tekton.dev/release: v0.24.0
    version: v0.24.0
  name: tekton-triggers-controller
  namespace: tekton-pipelines
spec:
  ports:
  - name: http-metrics
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-triggers
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-triggers-core-interceptors
    app.kubernetes.io/component: interceptors
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: tekton-triggers-core-interceptors
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/version: v0.24.0
    triggers.tekton.dev/release: v0.24.0
    version: v0.24.0
  name: tekton-triggers-core-interceptors
  namespace: tekton-pipelines
spec:
  ports:
  - name: https
    port: 8443
  selector:
    app.kubernetes.io/component: interceptors
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: core-interceptors
    app.kubernetes.io/part-of: tekton-triggers
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-triggers-webhook
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/version: v0.24.0
    triggers.tekton.dev/release: v0.24.0
    version: v0.24.0
  name: tekton-triggers-webhook
  namespace: tekton-pipelines
spec:
  ports:
  - name: https-webhook
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-triggers
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/version: v0.24.0
    triggers.tekton.dev/release: v0.24.0
  name: tekton-triggers-controller
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: controller
      app.kubernetes.io/part-of: tekton-triggers
  template:
    metadata:
      labels:
        app: tekton-triggers-controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: controller
        app.kubernetes.io/part-of: tekton-triggers
        app.kubernetes.io/version: v0.24.0
        triggers.tekton.dev/release: v0.24.0
        version: v0.24.0
    spec:
      containers:
      - args:
        - -logtostderr
        - -stderrthreshold
        - INFO
        - -el-image
        - gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/eventlistenersink:v0.24.0@sha256:77519cdc53bdefa393f700fb0e5891212c71411f09b4c261ea78c8d00cb6e831
        - -el-port
        - "8080"
        - -el-security-context=true
        - -el-events
        - disable
        - -el-readtimeout
        - "5"
        - -el-writetimeout
        - "40"
        - -el-idletimeout
        - "120"
        - -el-timeouthandler
        - "30"
        - -el-httpclient-readtimeout
        - "30"
        - -el-httpclient-keep-alive
        - "30"
        - -el-httpclient-tlshandshaketimeout
        - "10"
        - -el-httpclient-responseheadertimeout
        - "10"
        - -el-httpclient-expectcontinuetimeout
        - "1"
        - -period-seconds
        - "10"
        - -failure-threshold
        - "1"
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging-triggers
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability-triggers
        - name: CONFIG_DEFAULTS_NAME
          value: config-defaults-triggers
        - name: METRICS_DOMAIN
          value: tekton.dev/triggers
        - name: METRICS_PROMETHEUS_PORT
          value: "9000"
        image: gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/controller:v0.24.0@sha256:5d96635ef8bd6934ed2da26ec8049164b4421115d12aeba72933200b48addb58
        name: tekton-triggers-controller
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      serviceAccountName: tekton-triggers-controller
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: interceptors
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: core-interceptors
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/version: v0.24.0
    triggers.tekton.dev/release: v0.24.0
  name: tekton-triggers-core-interceptors
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: interceptors
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: core-interceptors
      app.kubernetes.io/part-of: tekton-triggers
  template:
    metadata:
      labels:
        app: tekton-triggers-core-interceptors
        app.kubernetes.io/component: interceptors
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: core-interceptors
        app.kubernetes.io/part-of: tekton-triggers
        app.kubernetes.io/version: v0.24.0
        triggers.tekton.dev/release: v0.24.0
        version: v0.24.0
    spec:
      containers:
      - args:
        - -logtostderr
        - -stderrthreshold
        - INFO
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging-triggers
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability-triggers
        - name: METRICS_DOMAIN
          value: tekton.dev/triggers
        - name: INTERCEPTOR_TLS_SVC_NAME
          value: tekton-triggers-core-interceptors
        - name: INTERCEPTOR_TLS_SECRET_NAME
          value: tekton-triggers-core-interceptors-certs
        image: gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/interceptors:v0.24.0@sha256:400d30f730cb6cf689e23cbaef650ca4bb9f827d923fcd575f56e80b79819720
        name: tekton-triggers-core-interceptors
        ports:
        - containerPort: 8443
        readinessProbe:
          httpGet:
            path: /ready
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      serviceAccountName: tekton-triggers-core-interceptors
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/version: v0.24.0
    triggers.tekton.dev/release: v0.24.0
  name: tekton-triggers-webhook
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: webhook
      app.kubernetes.io/part-of: tekton-triggers
  template:
    metadata:
      labels:
        app: tekton-triggers-webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: webhook
        app.kubernetes.io/part-of: tekton-triggers
        app.kubernetes.io/version: v0.24.0
        triggers.tekton.dev/release: v0.24.0
        version: v0.24.0
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging-triggers
        - name: WEBHOOK_SERVICE_NAME
          value: tekton-triggers-webhook
        - name: WEBHOOK_SECRET_NAME
          value: triggers-webhook-certs
        - name: METRICS_DOMAIN
          value: tekton.dev/triggers
        image: gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/webhook:v0.24.0@sha256:255281beca24067925635bd3c7999d7c784c3bb1e41cea8ad8c1140849b9efba
        name: webhook
        ports:
        - containerPort: 9000
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8443
          name: https-webhook
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      serviceAccountName: tekton-triggers-webhook
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: triggers.tekton.dev/v1alpha1
kind: ClusterInterceptor
metadata:
  labels:
    server/type: https
  name: bitbucket
spec:
  clientConfig:
    service:
      name: tekton-triggers-core-interceptors
      namespace: tekton-pipelines
      path: bitbucket
      port: 8443
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: triggers.tekton.dev/v1alpha1
kind: ClusterInterceptor
metadata:
  labels:
    server/type: https
  name: cel
spec:
  clientConfig:
    service:
      name: tekton-triggers-core-interceptors
      namespace: tekton-pipelines
      path: cel
      port: 8443
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: triggers.tekton.dev/v1alpha1
kind: ClusterInterceptor
metadata:
  labels:
    server/type: https
  name: github
spec:
  clientConfig:
    service:
      name: tekton-triggers-core-interceptors
      namespace: tekton-pipelines
      path: github
      port: 8443
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: triggers.tekton.dev/v1alpha1
kind: ClusterInterceptor
metadata:
  labels:
    server/type: https
  name: gitlab
spec:
  clientConfig:
    service:
      name: tekton-triggers-core-interceptors
      namespace: tekton-pipelines
      path: gitlab
      port: 8443
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: triggers.tekton.dev/v1alpha1
kind: ClusterInterceptor
metadata:
  labels:
    server/type: https
  name: slack
spec:
  clientConfig:
    service:
      name: tekton-triggers-core-interceptors
      namespace: tekton-pipelines
      path: slack
      port: 8443
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.24.0
  name: webhook.triggers.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: tekton-triggers-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: webhook.triggers.tekton.dev
  sideEffects: None
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.24.0
  name: config.webhook.triggers.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: tekton-triggers-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: config.webhook.triggers.tekton.dev
  namespaceSelector:
    matchExpressions:
    - key: triggers.tekton.dev/release
      operator: Exists
  sideEffects: None
---
# Source: triggers/templates/kustomized.yaml
# Source: triggers/templates/kustomized.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.24.0
  name: validation.webhook.triggers.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: tekton-triggers-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: validation.webhook.triggers.tekton.dev
  sideEffects: None
